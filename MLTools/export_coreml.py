import coremltools as ct
import numpy as np
import tensorflow as tf

# üì• –ó–∞–≥—Ä—É–∑–∫–∞ Keras-–º–æ–¥–µ–ª–∏
keras_model = tf.keras.models.load_model("rune_model.keras")
print("‚úÖ –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞: rune_model.keras")

# ‚ÑπÔ∏è –£—Ç–æ—á–Ω—è–µ–º –≤—Ö–æ–¥–Ω—É—é —Ñ–æ—Ä–º—É
input_shape = (1, 32, 2)  # –û–¥–∏–Ω –ø—Ä–∏–º–µ—Ä, 32 —Ç–æ—á–∫–∏, 2 –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (x, y)

# üî§ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤
classes = np.load("dataset/classes.npy").tolist()  # ['lightning', ...]

# üß† –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ CoreML
mlmodel = ct.convert(
    keras_model,
    source="tensorflow",  # üëà –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –æ—Å–æ–±–µ–Ω–Ω–æ –Ω–∞ TensorFlow-MacOS
    inputs=[ct.TensorType(name="input", shape=input_shape)],
    convert_to="mlprogram"  # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å iOS 15+
)

# üìé –î–æ–±–∞–≤–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
mlmodel.output_description["output"] = "Predicted rune class"
mlmodel.user_defined_metadata["classes"] = ",".join(classes)

# üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º .mlmodel
mlmodel.save("RuneModel.mlmodel")
print("‚úÖ CoreML –º–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: RuneModel.mlmodel")
