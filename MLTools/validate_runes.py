import os
import json

DATA_DIR = "runes_data"

def validate_json_files():
    files = [f for f in os.listdir(DATA_DIR) if f.endswith('.json')]
    if not files:
        print("‚ùå –ù–µ—Ç .json —Ñ–∞–π–ª–æ–≤ –≤ runes_data/")
        return

    total = 0
    valid = 0
    errors = []

    for f in files:
        path = os.path.join(DATA_DIR, f)
        total += 1
        try:
            with open(path, 'r') as file:
                data = json.load(file)
            label = data.get("label", None)
            points = data.get("points", [])

            if not isinstance(label, str):
                errors.append((f, "–ù–µ—Ç –∏–ª–∏ –Ω–µ—Å—Ç—Ä–æ–∫–æ–≤—ã–π label"))
                continue

            if not isinstance(points, list) or len(points) % 2 != 0:
                errors.append((f, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫ points"))
                continue

            if len(points) < 4:
                errors.append((f, "–°–ª–∏—à–∫–æ–º –º–∞–ª–æ —Ç–æ—á–µ–∫"))
                continue

            valid += 1
        except Exception as e:
            errors.append((f, f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: {e}"))

    print(f"üîç –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {total}")
    print(f"‚úÖ –í–∞–ª–∏–¥–Ω—ã—Ö: {valid}")
    print(f"‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö: {len(errors)}")
    for name, reason in errors:
        print(f"  - {name}: {reason}")

if __name__ == "__main__":
    validate_json_files()
